syntax = "proto3";

package wallguard_commands;

import "google/protobuf/empty.proto";
import "models.proto";

message AuthorizationRequest {
    string uuid = 1;
    string code = 2;
    string category = 3;
    string type = 4;
    string target_os = 5;
}

message Authentication {
    string app_id = 1;
    string app_secret = 2;
}

message ExecuteCLICommandRequest {
    string command = 1;
    repeated string arguments = 2;
    string request_unique_id = 3;
}

message ExecuteCLICommandResponse {
    string stdout = 1;
    string stderr = 2;
    int32 status = 3;
    string request_unique_id = 4;
}

message ClientMessage {
    oneof message {
        AuthorizationRequest authorization_request = 1;
        Authentication authentication = 2;
        ExecuteCLICommandResponse execute_cli_command_response = 3;
    }
}

message AuthenticationData {
    optional string app_id = 1;
    optional string app_secret = 2;
}

message SSHSessionData {
    string tunnel_token = 1;
    string public_key = 2;
}

message UISessionData {
    string tunnel_token = 1;
    string local_addr = 2;
    uint32 local_port = 3;
    string protocol = 4;
}

message ServerMessage {
    oneof message {
        string update_token_command = 1;
        
        bool enable_network_monitoring_command = 2;
        bool enable_configuration_monitoring_command = 3;
        bool enable_telemetry_monitoring_command = 4;

        SSHSessionData open_ssh_session_command = 5;
        string open_tty_session_command = 6;
        UISessionData open_ui_session_command = 7;
        string open_remote_desktop_session_command = 8;

        google.protobuf.Empty heartbeat_message = 9;

        AuthenticationData device_authorized_message = 10;
        google.protobuf.Empty device_deauthorized_message = 11;
        google.protobuf.Empty authorization_rejected_message = 12;

        wallguard_models.FilterRule create_filter_rule = 13;
        wallguard_models.NatRule create_nat_rule = 14;
        wallguard_models.Alias create_alias = 15;

        ExecuteCLICommandRequest execute_cli_command_request = 16;
    }
}